services:
#  media:
#    build: ./media
#    container_name: spring-s3-minio
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    ports:
#      - "8080:8080"

  thumbnail:
    build: ./thumbnail
    container_name: thumbnail
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  minio:
    image: minio/minio:RELEASE.2025-03-12T18-04-18Z-cpuv1
    container_name: minio
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"  # S3 API endpoint
      - "9001:9001"  # Web console
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_NOTIFY_AMQP_ENABLE_THUMBNAIL_NOTI=on
      - MINIO_NOTIFY_AMQP_URL_THUMBNAIL_NOTI=amqp://guest:guest@rabbitmq:5672/
      - MINIO_NOTIFY_AMQP_EXCHANGE_THUMBNAIL_NOTI=thumbnail
      - MINIO_NOTIFY_AMQP_EXCHANGE_TYPE_THUMBNAIL_NOTI=topic
      - MINIO_NOTIFY_AMQP_DELIVERY_MODE_THUMBNAIL_NOTI=1
      - MINIO_NOTIFY_AMQP_DURABLE_THUMBNAIL_NOTI=on
    volumes:
      - minio-data:/data
    #      - ./document/config/config.json:/root/.minio/config.json:rw  # <--- mount your config here
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 15s

#  minio-init:   # sidecar to initialize bucket and upload sample images
#    image: minio/minio:RELEASE.2025-03-12T18-04-18Z-cpuv1
#    container_name: minio-init
#    depends_on:
#      minio:
#        condition: service_healthy
#    entrypoint: >
#      /bin/sh -c "
#      mc alias set myminio http://minio:9000 minioadmin minioadmin;
#
#      echo 'Setting up AMQP notification target...';
#      mc admin config set myminio notify_amqp:thumbnail_noti enable=on url=amqp://guest:guest@rabbitmq:5672/ exchange=thumbnail exchange_type=topic delivery_mode=1 durable=on;
#
#      echo 'Restarting MinIO to apply config...';
#      mc admin service restart myminio;
#
#      mc mb myminio/e-com || true;
#      mc cp -r /photos/ myminio/e-com/;
#      mc mb myminio/public-assets || true;
#      mc anonymous set download myminio/public-assets;
#      mc cp -r /photos/ myminio/public-assets/;
#
#      mc event add myminio/e-com arn:minio:sqs::thumbnail_noti:amqp --event put --suffix .jpeg;
#      mc event add myminio/e-com arn:minio:sqs::thumbnail_noti:amqp --event put --suffix .jpg;
#      mc event add myminio/e-com arn:minio:sqs::thumbnail_noti:amqp --event put --suffix .png;
#      echo 'MinIO initialization complete!';
#      exit 0;
#      "
#    volumes:
#      - ./document/photos:/photos:ro

  minio-init:
    image: minio/minio:RELEASE.2025-03-12T18-04-18Z-cpuv1
    container_name: minio-init
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: /setup/minio_init.sh
    volumes:
      - ./document/minio_init/minio_init.sh:/setup/minio_init.sh:ro
      - ./document/photos:/photos:ro

  rabbitmq:
    image: rabbitmq:3.8.11-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 10

volumes:
  minio-data:
